cpu的主要指标

CPU Utilization
CPU 使用率，CPU的使用时间百分比，75%以上就比较高了。
在任意时间内,CPU有7个状态: 
1.idle,表示CPU闲置并等待工作分配. 
2.user,表示CPU在运行用户的进程 
3.system,表示CPU在执行kernel工作 
4.nice,表示CPU花费在被nice改变过优先级的process上的时间(注意:被nice命令改变优先级的process仅指那些nice值为负的process.花费在被nice命令改变优先级的任务上的时间也将被计算在系统和用户时间内,因此整个时间加起来可能会超过百分之百) 
5.iowait,表示CPU等待IO操作完成的时间 
6.irq,表示CPU开销在响应硬中断上的时间 
7.softirq,表示CPU开销在响应软中断上的时间. 
我们一般用vmstat看到的都是四个状态:sy,us,id,wa,通过他和load avg结合，基本可以知道cpu的状态
大部分的性能工具用百分比表示CPU时间.当system时间占用很高的时候,你可以用"oprofile"工具发现时间都花费在哪里.当iowait很高的时候,你需要分析你的IO设备,比如磁盘,网卡.
 
Average load
平均负载，上一分钟同时处于“就绪”状态的平均进程数。
Load这个东西怎么理解呢，就像一条马路，有N个车道，如果N个进程进入车道，那么正好一人一个，再多一辆车就占不到车道，要等有一个车空出车道。 
在CPU中可以理解为CPU可以并行处理的任务数，那么就是“CPU个数 * 核数”，如果CPU Load = CPU个数 * 核数 那么就是说CPU正好满负载，再多一点，可能就要出问题了，有任务不能被及时分配处理器，那么保证性能的话，最好是小于CPU个数 * 核数 *0.7。
Load Average是 CPU的 Load，它所包含的信息是在一段时间内 CPU正在处理以及等待 CPU处理的进程数之和的统计信息，也就是 CPU使用队列的长度的统计信息。
Load Average 的值应该小于“CPU个数 * 核数 *0.7 ” ，否则就高了。
比如： 
1个1核CPU，Load Average < 1 * 1 * 0.7 = 0.7； 
1个4核的CPU，Load Average必须 < 1 * 4 * 0.7 = 2.8。 
查看cpu的信息：grep ‘model name’ /proc/cpuinfo
使用 vmstat 看到的数据中也有这个数据，vmstat 查看r（Load Average）。
另外，top命令应该是把每个核的CPU占用率加起来，算一个和，于是多核情况下会top命令会计算出超过100%。


在linux中,process有两种状态: 
1.runnable 
2.blocked waiting for an event to complete 
一个blocked状态的process可能在等待一个I/O操作获取的数据，或者是一个系统调用的结果。 
如果一个process在runnable状态，这就意味着它将同其他runnable状态的process等待CPU时间，而不是立即获得CPU时间，一个runnable状态的process不需要消耗CPU时间，只有当Linux调度进程从runnable队列中选择哪个process下次执行。 
当 process在runnable状态，当时等待CPU时间时，他们形成的等待队列称作Run Queue.Run Queue越大，表示等待的队列越长。 
性能工具通常显示runnable processes的数目和blocked processes的数目。 
还有一个很常见的系统状态是load average，系统的load是指running和runnable process的总和。 
例如:如果有两个processes在running和有三个在等待运行(runnable)，那么系统的load为五。 
load average是指在指定时间内load的平均值。一般load average显示的三个数字的时间分别为1分钟,五分钟和十五分钟。




什么是僵死进程？
1、一个父进程fork了一个子进程
2、子进程退出了，父进程没有退出
3、而且父进程也没有对SIGCHILD信号量做处理，也没有调用waitpid函数处理
4、子进程变成僵死进程,即使root使用kill -9 也无法杀死
5、等待父进程退出后，Init进程接管这些僵死进程，并调用waitpid
为什么要这样做？
因为父进程有可能需要获取子进程的运行状态，所以内核必须保存子进程的一些有关信息，从而产生了僵死进程